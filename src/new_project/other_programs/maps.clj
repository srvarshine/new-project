(ns new-project.other-programs.maps
  (:require [clojure.set :as set])
  (:gen-class))
(defn map-operations []
  (def hm (hash-map "z" 1 "b" 2 "a" 3))
  (println hm)
  (def hm-sorted (sorted-map "z" "1" "b" "2" "a" "3"))
  (println hm-sorted)
  (println (get hm "b"))
  (println (contains? hm "b"))
  (println (find hm "b"))
  (println (keys hm))
  (println (vals hm))
  (def new-map (dissoc hm "b"))
  (println new-map)
  (def hm1 (hash-map "a" 2 "h" 5 "i" 7))
  (println (merge hm hm1))
  (println (merge-with + hm hm1))
  (println (select-keys hm ["z" "a"]))
  (def hnew (set/map-invert hm))
  (println hnew)
  (def hnew1 (set/rename-keys hm {"z" "newz"}))
  (println hnew1)
  )
(map-operations)