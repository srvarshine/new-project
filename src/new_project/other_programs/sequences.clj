(ns new-project.other-programs.sequences)
(defn sequence-eg []
  (def x (seq [1 2 3 7]))
  (def y (seq [4 5 6]))
  (println x)
  (println (cons 0 x))
  (println (conj [1 2 3] 4))
  (println (concat x y))
  (def seq1 (distinct (seq [1 1 2 2])))
  (println seq1)
  (def seq1 (reverse (seq [1 2 3])))
  (println seq1)
  (println (first x))
  (println (last x))
  (println (rest x))
  (println (sort x))
  (def seq2 (drop 2 x))
  (println seq2)
  (def seq2 (take-last 2 x))
  (println seq2)
  (def seq2 (take 2 x))
  (println seq2)
  (def seq2 (split-at 2 x))
  (println seq2)
  )
(sequence-eg)